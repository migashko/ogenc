#!/bin/bash

scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
. "$scriptdir/ogenc-context2"

function usage()
{
  echo "Warnings or Optimizations Options Generator:"
  echo "  $scriptname warnings [target_compiler [generator-compiler [generator-options ] ] ]"
  echo "  $scriptname optimize  [target_compiler [generator-compiler [generator-options ] ] ]"
  echo "Example:"
  echo "  $scriptname warnings clang++ g++ \"-W -Wall -Wextra -Wformat -Wpedantic\" "
}

[ -z $1 ] && usage && exit
[ $1 != "warnings" ] && [ $1 != "optimize" ] && usage && exit

specific=$1

# по умолчанию определены в ogenc-context
[ ! -z $2 ] && current_compiler="$2"
[ ! -z $3 ] && generator_options="$3"
[ ! -z $4 ] && default_generator="$4"

# все опции сгенерированые компилятором-генератором
raw_options_list_f="$cache_path/raw-$(ogenc-versions name $current_compiler)-$specific.txt" || exit 1
# все опции доступные на целевом компиляторе
all_options_list_f="$cache_path/all-$(ogenc-versions name $current_compiler)-$specific.txt" || exit 1
# опции НЕ доступные на целевом компиляторе
fail_options_list_f="$cache_path/fail-$(ogenc-versions name $current_compiler)-$specific.txt" || exit 1
# опции для целевого компилятора с учетом списка ignored.txt
options_list_f="$cache_path/$specific-$(ogenc-versions name $current_compiler).txt" || exit 1

log 0 "Generate $specific: $default_generator $generator_options -Q --help=$specific ..."
# Генерируем список опций которые не помечены как [enabled]
$default_generator $generator_options -Q --help=$specific | grep -v "\[enabled\]" > "${raw_options_list_f}"
>"${all_options_list_f}"
>"${fail_options_list_f}"
# Проверяем каждую опцию путем компиляции тестового файла
while IFS="" read -r opt_line
do
  [[ -z $opt_line ]] && continue
  #continue
  opt=$(echo $opt_line | awk '{print $1}') 
  if $current_compiler $opt "$scriptdir/test.cpp" -Werror -o /dev/null 2>"${cache_path}/tmp1.txt"; then
    
    if [ "$(cat ${cache_path}/tmp1.txt | wc -l)" == "0" ]; then
      log 2 "OK: $opt"
      echo "$opt" >> "${all_options_list_f}" || exit 1
    else
      out=$(cat $"${cache_path}/tmp1.txt")
      log 1 "FAIL1 $current_compiler: $opt_line"
      log 1 "$out"
      [[ "$opt" != *"-"* ]] || echo $opt >> "${fail_options_list_f}" || exit 1
    fi
  else
    log 1 "FAIL2 $current_compiler: $opt_line"
    [[ "$opt" != *"-"* ]] || echo $opt >> "${fail_options_list_f}" || exit 1
  fi
done < "${raw_options_list_f}"

log 2 "cat ${all_options_list_f} | grep -vwF -f ${ignored_list_f} > ${options_list_f}"
cat ${all_options_list_f} | grep -vwF -f ${ignored_list_f} | sort > "${options_list_f}" || exit 1
log 2 "cp ${options_list_f} ${lists_all_path}"
cp ${options_list_f} ${lists_all_path} || exit 1
log 1 "Done"
